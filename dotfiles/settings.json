{
    "workbench.colorTheme": "Default High Contrast",
    "workbench.colorCustomizations": {
        "titleBar.activeBackground": "#a7005c"
    },

    "editor.rulers": [88, 120],

    // "explorer.confirmDelete": false,
    "jupyter.askForKernelRestart": false,
    "jupyter.debugJustMyCode": false,

    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",                 // <-- alt., charliermarsh.ruff
        "editor.formatOnSave": true,                                            // <-- true, {false}
        "editor.formatOnSaveMode": "file",                                      // {file}, modifications, modificationsIfAvailable
        "editor.codeActionsOnSave": {
            // "source.fixAll": "explicit",                                        // <-- explicit, always, never (?) // ruff (avoid for the time being)
            "source.organizeImports": "explicit",                               // <-- explicit, always, never  // isort or ruff
            "source.unusedImports": "never",                                    // <-- explicit, always, never  // pylance
            "source.convertImportFormat": "never"                               // <-- explicit, always, never  // pylance
        },
        "diffEditor.ignoreTrimWhitespace": false
    },

    "notebook.formatOnSave.enabled": true,                                      // <-- true, false (?)
    "notebook.codeActionsOnSave": {
        // "notebook.source.fixAll": "explicit",                                   // <-- explicit, always, never (?)  // ruff (avoid for the time being)
        "notebook.source.organizeImports": "explicit",                          // <-- explicit, always, never (?)  // isort or ruff
        "notebook.source.unusedImports": "never",                               // <-- explicit, always, never (?)  // pylance
        "notebook.source.convertImportFormat": "never"                          // <-- explicit, always, never (?)  // pylance
    },

    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python3",    // default: python
    "python.venvFolders": [  // only per user?                                  // default: []
        "${workspaceFolder}"
    ],
    "python.interpreter.infoVisibility": "always",  // only per user?

    "python.languageServer": "Pylance",                                         // Pylance, None, {Default}
    "python.analysis.typeCheckingMode": "strict",   // pypassed by pyright settings in pyproject.toml   // <-- strict, basic, {off}
    "python.analysis.autoImportCompletions": true,                              // <-- true, {false}
    "python.analysis.importFormat":	"relative",                                 // relative, {absolute}
    "python.testing.unittestEnabled": true,                                     // <-- true, {false}
    "python.testing.pytestEnabled": true,                                       // <-- true, {false}

    // "black-formatter.enabled": true,  // enable / disable extension instead
    "black-formatter.importStrategy": "useBundled",                             // {useBundled}, fromEnvironment
    "black-formatter.args": [
        "--line-length", "88"                                                   // default: 88
    ],

    // "isort.enabled": true,  // enable / disable extension instead
    "isort.importStrategy": "useBundled",                                       // {useBundled}, fromEnvironment
    "isort.args": [
        "--profile", "black"
    ],

    "ruff.enable": true,    // undocumented; alt., can enable / disable extension instead   // <-- {true}, false
    "ruff.importStrategy": "useBundled",
    "ruff.lineLength": 88,                                                      // default: 88
    "ruff.organizeImports": false,                                              // <-- {true}, false // avoid being activated on 'organizeImports'

    // "mypy-type-checker.enabled": true,  // enable / disable extension instead
    "mypy-type-checker.ignorePatterns": [                                       // <-- default: []
    ],
    "mypy-type-checker.importStrategy": "useBundled",                           // {useBundled}, fromEnvironment
    "mypy-type-checker.args": [
        "--check-untyped-defs"
    ],

    "pylint.enabled": true, // alt., can enable / disable extension instead     // <-- {true}, false
    "pylint.ignorePatterns": [                                                  // <-- default: []
    ],
    "pylint.lintOnChange": true,  // only per user?                             // true, {false}
    "pylint.importStrategy": "useBundled",                                      // {useBundled}, fromEnvironment
    "pylint.args": [
        "--max-line-length", "88"                                               // default: 100
    ],

    "cSpell.enabled": true,                                                     // <-- {true}, false
    "cSpell.language": "en,he",
    "cSpell.enabledFileTypes": {
        "*": true                                                               // <--
    },
    "cSpell.ignorePaths": [                                                     // <--
    ],
    "cSpell.ignoreWords": [
    ],
    "cSpell.userWords": [  // only per user?
    ],

    "makefile.configureOnOpen": true,

    "vim.smartRelativeLine": true,

    "git.openRepositoryInParentFolders": "always",

    "github.copilot.nextEditSuggestions.enabled": false
}
